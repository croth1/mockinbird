# Configuration file for STAMMP_preProcess.py
# ===========================================
#
# The pre-process is a wrapper for various programs. All Options in [Basic Options]
# must be edited by the user to provide the pre-process script with specific input data,
# directories and mapping indices. 
# 
# For each program used in the pre-process separate sections exist to change specific program options. The default options 
# in this file are currently used in the lab. For detailed parameter description take 
# a look at the program's documentations.
#
#useLocalVersions = N ; boolean [Y/N] if Y bowtie,

[basic.options]
adapter5prime = GTTCAGAGTTCTACAGTCCGACGATC
adapter3prime = TGGAATTCTCGGGTGCCAAGG
bowtieindex = /media/hd2/MIRROR/bowtie_and_genome/BowtieIndex/genome
genomefasta = /media/hd2/MIRROR/bowtie_and_genome/WholeGenomeFasta/genome.fa
rmTemp = Y ; boolean [Y/N] remove temporary files after finishing
fx_Q33 = Y ; boolean [Y/N] Only important if you use the FastxToolkit. Use Sanger or Illumina scores


[fastXstatistics]
use = N ; boolean [Y/N]

[fastQC]
fqc_use = N  ; boolean [Y/N]
threads = 4  ; int
kmers = 7    ; int

[remove5primeAdapter]
rm5_strict=N        ; boolean [Y/N]
rm5_seed=8          ; int
rm5_barcode=5       ; int
rm5_clipanywhere=N  ; boolean [Y/N]

[fastxTrimmer]
fx_use = Y          ; boolean [Y/N]
fx_f = 6            ; int First base to keep.
fx_l =              ; int Last base to keep. Default is entire read.

[removePCRduplicates]
rmPCR_use = N       ; boolean [Y/N]

[qualityFiltering]
qf_use = N          ; boolean [Y/N]
qf_q = 30           ; int Phred score quality cutoff value
qf_chastity = N     ; boolean [Y/N] Keep reads with Illumina chastity filter flag of
qf_n = Y            ; boolean [Y/N] Remove reads containing unknown bases
qf_m = 15           ; int Mininum read length (nt) 

[fastxQualityFilter]
fxQ_use = Y         ; boolean [Y/N]
fxQ_q = 30          ; int Minimum quality score to keep.
fxQ_p = 100         ; int Minimum percent of bases that must have [fxQ_q] quality.

[bowtie]
bowtie_local = N    ; boolean [Y/N] use Y = use bowtie in /utils/bowtie* the system wide otherwise
bowtie_v = 1        ; int Report alignments with at most <int> mismatches. -e and -l options are ignored and quality values have no effect on what alignments are valid. -v is mutually exclusive with -n.
bowtie_m = 1        ; int Suppress all alignments for a particular read or pair if more than <int> reportable alignments exist for it.
bowtie_threads = 2  ; int Launch <int> parallel search threads.

